from pathlib import Path

class CliArgs:
    def __init__(self) -> None:
        #: Base path of a git repository. Defaults to working directory.
        self.path: Path | None = ...
        """Version of release. This should be the github action env var
        GITHUB_REF ('refs/tags') or last 7 digits of GITHUB_SHA."""
        self.version: str | None = ...
        #: Author of release. This should be the github action env var GITHUB_ACTOR.
        self.author: str | None = ...
        #: Title of released package. This should be just the github repo name.
        self.title: str | None = ...
        #: Output path to save released package file.
        self.dir_out: Path | None = ...

#: The `dict` of package components discovered by the `main()` loop
class HasComponents:
    def __init__(self) -> None:
        self.rm_skin_ini: bool = ...
        self.skins: int = ...
        self.layouts: int = ...
        self.plugins: bool = ...
        self.vault: int = ...
        self.rm_skin_bmp: bool = ...

class Bitness:
    Bit32: "Bitness" = ...
    Bit64: "Bitness" = ...
    Unknown: "Bitness" = ...

def discover_components(path: Path) -> HasComponents:
    """The method that does preliminary discovery of rmskin package components."""
    ...

def parse_rmskin_ini(args: CliArgs, path: Path, build_dir: Path) -> tuple[str, str]:
    """Read the RMSKIN.ini and write a copy for building the RMSKIN package."""
    ...

def validate_header_image(path: Path, build_dir: Path) -> None:
    """Make sure header image (if any) is ready to package"""
    ...

def is_dll_32(dll_file: Path) -> bool:
    """Returns True if dll file is compiled for 32 bit machines, otherwise False"""
    ...

def get_dll_bitness(dll_file: Path) -> Bitness:
    """Returns the `Bitness` of the given ``dll_file``."""

def init_zip_for_package(
    arch_name: str, args: CliArgs, path: Path, build_dir: Path
) -> Path:
    """Create initial archive to use as RMSKIN package"""
    ...

def main() -> None:
    """The main execution loop for creating a rmskin package."""
    ...
