name: rmskin-build
description: packaging tool for Rainmeter User Content

# for the badge
branding:
  icon: 'droplet'
  color: 'blue'

inputs:
  version:
    description: >-
      Version of the Rainmeter rmskin package.
      Defaults to last 8 digits of SHA from commit or reference tags.
    required: false
    default: 'auto'
  title:
    description: >-
      Name of the Rainmeter rmskin package.
      Defaults name of repository.
    required: false
    default: ${{ github.event.repository.name }}
  author:
    description: >-
      Account Username maintaining the rmskin package.
      Defaults to Username that triggered the commit.
    required: false
    default: ${{ github.repository_owner }}
  path:
    description: >-
      Base directory of repo being packaged.
      Defaults to current working directory path.
    required: false
    default: "."
  dir_out:
    deprecationMessage: DEPRECATED. Use `dir-out` instead.
    description: >-
      Path to save generated rmskin package.
      Defaults to current working directory path.
    required: false
    default: "."
  dir-out:
    description: >-
      Path to save generated rmskin package.
      Defaults to current working directory path.
    required: false
    # default: "." # TODO: Uncomment when deprecated alias is removed

outputs:
  arc_name:
    # deprecationMessage: DEPRECATED. Use `arc-name` instead.
    description: The path to & name of the .rmskin file that was generated.
    value: ${{ steps.rmskin-builder.outputs.arc-name }}
  arc-name:
    description: The path to & name of the .rmskin file that was generated.
    value: ${{ steps.rmskin-builder.outputs.arc-name }}

runs:
    using: 'composite'
    steps:
      - name: Install the latest version of uv
        uses: astral-sh/setup-uv@v6
      - name: Normalize action path
        shell: pwsh
        id: pre
        run: |-
          $action_path = $env:GITHUB_ACTION_PATH.TrimEnd('/', '\')
          echo "action_path=$action_path" >> $env:GITHUB_OUTPUT
      - name: Run rmskin-builder
        shell: pwsh
        id: rmskin-builder
        run: >-
          uvx
          --constraints ${{ steps.pre.outputs.action_path }}/action-requirements.txt
          rmskin-builder
          --path "${{ inputs.path }}"
          --version "${{ inputs.version }}"
          --author "${{ inputs.author }}"
          --title "${{ inputs.title }}"
          --dir_out "${{ inputs.dir_out }}"
