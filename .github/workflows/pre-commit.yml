name: pre-commit

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

permissions: {}

jobs:
  all-files:
    # also lints python files
    permissions:
      contents: read
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          persist-credentials: false
      - name: Install the latest version of uv
        uses: astral-sh/setup-uv@d0cc045d04ccac9d8b7881df0226f9e82c39688e # v6.8.0
        id: setup-uv
        with:
          enable-cache: true
      - name: Cache pre-commit environments
        uses: actions/cache@0057852bfaa89a56745cba8c7296529d2fc39830 # v4.3.0
        with:
          path: '~/.cache/pre-commit'
          key: pre-commit-${{ steps.setup-uv.outputs.uv-version }}-${{ hashFiles('.pre-commit-config.yaml') }}
      - run: uvx pre-commit run --show-diff-on-failure --color=always --all-files

  lint-rust:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          persist-credentials: false
      - name: Cache deps
        uses: actions/cache@0057852bfaa89a56745cba8c7296529d2fc39830 # v4.3.0
        with:
          path: ~/.cargo
          key: cargo-lint-${{ hashFiles('Cargo.lock') }}
      - name: Setup Rust
        run: rustup update --no-self-update
      - run: cargo clippy
      - run: cargo fmt --check

  check-pr-title:
    name: Check PR title
    permissions:
      contents: read
      pull-requests: read
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          persist-credentials: false
      - run: rustup update --no-self-update
      - name: Install cargo-binstall
        uses: cargo-bins/cargo-binstall@38e8f5e4c386b611d51e8aa997b9a06a3c8eb67a # v1.15.6
      - name: Install committed
        run: cargo binstall -y committed
        env:
          GITHUB_TOKEN: ${{ github.token }}
      - name: Get PR title
        id: get-title
        env:
          GH_TOKEN: ${{ github.token }}
          GH_REPO: ${{ github.repository }}
          PR_NUMBER: ${{ github.event.pull_request.number }}
        run: |-
          pr_title=$(gh pr view "${PR_NUMBER}" --repo "${GH_REPO}" --json "title" -q ".title")
          echo "title=${pr_title}" >> "${GITHUB_OUTPUT}"
      - name: conventional-commit
        env:
          PR_TITLE: "${{ steps.get-title.outputs.title }}"
          COMMITTED_CONFIG: .config/committed.toml
        run: echo "${PR_TITLE}" | committed --config "${COMMITTED_CONFIG}" --commit-file -
      - uses: actions/setup-node@a0853c24544627f65ddf259abe73b1d18a591444 # v5.0.0
        with:
          node-version: latest
      - name: spell check
        env:
          PR_TITLE: "${{ steps.get-title.outputs.title }}"
        run: echo "${PR_TITLE}" | npx cspell-cli lint stdin
